lio_sam:
  pointCloudTopic: "lslidar_point_cloud" 
  imuTopic: "imu_correct"
  sensor: velodyne                            # lidar sensor type, either 'velodyne' or 'ouster' lslidar
  Horizon_SCAN: 2000                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048)
  extrinsicTrans: [-0.096263, -0.113189, -0.004455]
  extrinsicRot: [-0.998542,  0.015347,  0.051751,
                 -0.015395, -0.999881, -0.000541,
                  0.051736, -0.001337,  0.998660]
  extrinsicRPY: [-0.998542,  0.015347,  0.051751,
                 -0.015395, -0.999881, -0.000541,
                  0.051736, -0.001337,  0.998660]


  # pointCloudTopic: "points_raw"               # Point cloud data
  # imuTopic: "imu_raw"                     # IMU data
  # sensor: velodyne                            # lidar sensor type, either 'velodyne' or 'ouster' lslidar
  # Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048)
  # extrinsicTrans: [0.0, 0.0, 0.0]
  # extrinsicRot: [0.00773971, 0.999477, 0.0314072,
  #                 -0.999807, 0.00830158, -0.0177988,
  #                 -0.0180502, -0.0312634, 0.999348]
  # extrinsicRPY: [0.00773971, 0.999477, 0.0314072,
  #                 -0.999807, 0.00830158, -0.0177988,
  #                 -0.0180502, -0.0312634, 0.999348]
#------------------------------------------
  odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  # gpsTopic: "odometry/gpsz"                   # GPS odometry topic from navsat, see module_navsat.launch file
  gpsTopic: "odometry/gps"
      
  # Frames
  lidarFrame: "base_link"
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"

  # GPS Settings
  useImuHeadingInitialization: false           # if using GPS data, set to "true"
  useGpsElevation: false                      # if GPS elevation is bad, set to "false"
  gpsCovThreshold: 100.0                        # m^2, threshold for using GPS data
  poseCovThreshold: 10.0                      # m^2, threshold for using GPS data
  
  # Export settings
  savePCD: true                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
  savePCDDirectory: "/limy/roscode/map_copy/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

  # Sensor Settings
  N_SCAN: 16                                  # number of lidar channel (i.e., 16, 32, 64, 128)
  downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
  lidarMinRange: 1.0                          # default: 1.0, minimum lidar range to be used
  lidarMaxRange: 1000.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  # imuAccNoise: 3.9939570888238808e-03
  # imuGyrNoise: 1.5636343949698187e-03
  # imuAccBiasN: 6.4356659353532566e-05
  # imuGyrBiasN: 3.5640318696367613e-05
  imuAccNoise: 6.2400855673608322e-03
  imuGyrNoise: 4.7481751690847765e-04
  imuAccBiasN: 2.0446102025448482e-04
  imuGyrBiasN: 1.7885090929762518e-05
  imuGravity: 9.80511
  imuRPYWeight: 0.01

  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1
  edgeFeatureMinValidNum: 10
  surfFeatureMinValidNum: 100

  # voxel filter paprams
  odometrySurfLeafSize: 0.4                     # default: 0.4 - outdoor, 0.2 - indoor
  mappingCornerLeafSize: 0.2                    # default: 0.2 - outdoor, 0.1 - indoor
  mappingSurfLeafSize: 0.4                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
  numberOfCores: 6                              # number of cores for mapping optimization
  mappingProcessInterval: 0.15                  # seconds, regulate mapping frequency

  # Surrounding map
  surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
  surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

  # Loop closure
  loopClosureEnableFlag: true
  loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
  surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
  historyKeyframeSearchRadius: 50.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
  historyKeyframeFitnessScore: 0.3              # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
  globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density

liauto:
  laneletFilePath: "/limy/roscode/map_copy/new_lanelet2_maps.osm"              # 道路地图文件
  relocationKeyMapSize: 20                      # 重定位时搜索离当前GPS点最近的关键帧个数
  icpSetMaxCorrespondenceDistance: 100000          # 重定位ICP算法中匹配点间的最大距离（真是值除以四，因为雷达缩小了4倍）
  icpSetTransformationEpsilon: 1.0e-6           # 当转换矩阵的变化小于此阈值时，ICP算法的迭代过程将终止。
  icpSetEuclideanFitnessEpsilon: 1.0e-6            # 当ICP算法将源点云变换到目标点云的均方误差小于 SetEuclideanFitnessEpsilon 时，ICP算法将停止迭代
  useIcp: 0                                     # 使用ICP：0还是NDT：1
  ndtTransformationEpsilon: 100                 # ndt 匹配点间的最大距离 
  ndtSetStepSize: 0.001                           # ndt 
  ndtSetResolution: 1.0
  resetImuPreintegration: 0                     # 重置imu欲积分
  scanToMapGap: 0.1                             # 秒、利用激光雷达在地图中更新当前位姿的间隔
  turnScale: -10.0                                # 转向的比例
  testTorque: 127                               # 测试用的扭矩，0-255
  testBreak: 127                                # 测试用的刹车力度 0-255
  testSpeed: 3.0                                # 测试用的模拟车速，计算转向角度用
  testMinProgDist: 8.0                              # 测试用的最小处理间距，计算转向角度用 实际应该乘4？
  kalman_initial_estimate: 0.0
  kalman_initial_error: 1.0
  kalman_measurement_error: 0.6
  kalman_process_error: 0.01
  laneletMapScale: 0.5                          #laneletMap 可视化时的尺寸
  laneletMapR: 1.0                              #lanletMap linestring 的颜色
  laneletMapG: 0.0
  laneletMapB: 0.0
  markerDangerAreaBoundaryPointsSize: 1.0          #危险区域边界点的大小
  markerDangerAreaScaleX: 15.0                   #危险区域的检测长度
  markerDangerAreaScaleXoffset: -8.0
  markerDangerAreaScaleY: 5.8
  markerDangerAreaScaleZ: 1.5
  markerDangerAreaScaleZoffset: 1.3
  markerDangerAreaScaleR: 0.1                   #危险区域的颜色
  markerDangerAreaScaleG: 0.6
  markerDangerAreaScaleB: 0.1
  markerDangerAreaScaleA: 0.5                   #透明度

  obstaclePointsThreshold: 5                    #判定为障碍物的点云数量
  obstacleMarkerScale: 3.0                            #障碍物可视化尺寸
  obstacleMarkerR: 1.0
  obstacleMarkerG: 0.1
  obstacleMarkerB: 0.3
  obstacleMarkerAlpha: 0.5
  obstacleMarkerLifetime: 0.2
  
  followPointScale: 0.5                         # 跟随点的可视化大小  
  #paper data
  miniDistance: 10                              #红绿灯路口vt>miniDistance才通过
  


# Navsat (convert GPS coordinates to Cartesian)
navsat:
  frequency: 50
  wait_for_datum: false
  delay: 0.0
  magnetic_declination_radians: 0.141720733
  yaw_offset: 1.5707963
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false

# EKF for Navsat
ekf_gps:
  publish_tf: false
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.0
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu_correct
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [false, false, false,
                true,  true,  true,
                false, false, false,
                false, false, true,
                true,  true,  true]
  imu0_differential: false
  imu0_queue_size: 500 
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_differential: false
  odom0_queue_size: 100

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [  1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015]
